{- Hub and Spokes:
   - Total, Groupoid Truncations.
   Copyright (c) Groupoid Infinity, 2014-2020.

   HoTT 6.7 Hub and Spokes
   HoTT 7.3 Truncations -}

module hubspokes where
import suspension
import nat

-- 2-disc aka Hub and Spokes, suitable even for (n=0). In other cases Eq constructors ain't needed.
data hubSpokes (S A: U)
   = base (x: A)
   | hub (f: S -> hubSpokes S A)
   | spoke (f: S -> hubSpokes S A) (s:S)
     <i> [ (i=0) -> hub {hubSpokes S A} f @ i , (i=1) -> f s ]
   | hubEq (x y: A) (p: S -> Path A x y)
     <i> [ (i=0) -> base x , (i=1) -> base y ]
   | spokeEq (x y: A) (p: S -> Path A x y) (s: S)
     <i> [ (i=0) -> hubEq {hubSpokes S A} x y p @ i , (i=1) -> base (p s @ i) ]

nTruncTotal (A: U) (n: nat): U = hubSpokes (Sn n) A

-- Simple direct n-truncation as HIT (n>1)
data nTrunc (A : U) (n : nat)
   = base (x: A)
   | hub (f : (Sn (succ n)) -> nTrunc A n)
   | spoke (f : (Sn (succ n)) -> nTrunc A n) (x : Sn (succ n))
     <i> [ (i=0) -> hub f , (i=1) -> f x ]

gTrunc1 (A: U) (n: nat): U = nTrunc A three
gTrunc2 (A: U) (n: nat): U = nTrunc A five
gTrunc3 (A: U) (n: nat): U = nTrunc A six
gTrunc4 (A: U) (n: nat): U = nTrunc A seven
