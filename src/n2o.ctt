module n2o where
import list
import process

binary: U  = list nat

data ftp   = ftp (id sid filename meta size offset block datum status: binary)
data heart = ping | pong

data result (A: U) = ok | error | result (_: A)
record : U = (tab: nat) * list ((T:U)*T)
data kvs   = get (k: nat) (tab: nat)
           | put (k: nat) (tab: nat) (v: record)
           | delete (k: nat) (tab: nat)
           | join
           | fold (k: record) (n: nat)
           | index (tab: nat) (field: nat) (t: U) (value: t)
           | next (k: record)
           | prev (k: record)

kvs_exec: kvs -> result (list record) = split
  get k t   -> kvs_get k t
  put k t v -> kvs_put k t v
  delete k  -> kvs_delete k
  join      -> kvs_join
  fold k n  -> kvs_fold k n
  index t f _ v -> kvs_index t f v
  next r    -> kvs_next r
  prev r    -> kvs_prev r

data bpe   = create
           | event
           | complete
           | amend
           | run
           | until

data nitro = pickle (source pickled args: binary)
           | client (id: nat) (topic _: binary)
           | server (_: binary)
           | flush (_: binary)
           | direct (id d: binary)
           | io (_: either ok error)
           | init (_: binary)

data n2o   = kvs
           | bpe
           | nitro
           | ftp
           | rest
           | heart

data mqtt  = con
           | discon
           | sub
           | unsub
           | created
           | subscribed
           | unsubscribed
           | terminated
           | pub
           | deliverred
           | ack
